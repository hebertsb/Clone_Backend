# Generated by Django 5.2.6 on 2025-09-14

from django.db import migrations, models
import django.db.models.deletion
from django.core.management import call_command
from pathlib import Path

def load_fixtures(apps, schema_editor):
    app_dir = Path(__file__).resolve().parent.parent
    fixtures = [app_dir / "fixtures" / "datos_reserva.json"]

    for fixture in fixtures:
        if fixture.exists():
            try:
                print(f"[seed] Cargando {fixture.name}")
                call_command("loaddata", str(fixture))
            except Exception as e:
                print(f"[ERROR] No se pudo cargar {fixture.name}: {e}")
        else:
            print(f"[seed] No encontrado: {fixture}")

class Migration(migrations.Migration):

    dependencies = [
        ('reservas', '0001_initial'),
    ]

    operations = [

        # 2) Crear el nuevo modelo intermedio
        migrations.CreateModel(
            name='ReservaAcompanante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('CONFIRMADO', 'CONFIRMADO'), ('CANCELADO', 'CANCELADO')], default='CONFIRMADO', max_length=10)),
                ('es_titular', models.BooleanField(default=False)),
                ('acompanante', models.ForeignKey(
                    on_delete=django.db.models.deletion.RESTRICT,
                    related_name='reservas_acompanantes',
                    to='reservas.acompanante'
                )),
                ('reserva', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='acompanantes',
                    to='reservas.reserva'
                )),
            ],
            # sin db_table: que use el nombre por defecto
        ),
migrations.RunSQL("DROP INDEX IF EXISTS uq_un_titular_por_reserva", reverse_sql=""),

        # 3) Constraint: un solo titular por reserva
        migrations.AddConstraint(
            model_name='reservaacompanante',
            constraint=models.UniqueConstraint(
                condition=models.Q(('es_titular', True)),
                fields=('reserva',),
                name='uq_un_titular_por_reserva',
            ),
        ),

        # 4) Unicidad (reserva, acompanante)
        migrations.AlterUniqueTogether(
            name='reservaacompanante',
            unique_together={('reserva', 'acompanante')},
        ),

        # Note: The original migration renamed `Visitante` -> `Acompanante`
        # and deleted `ReservaVisitante`. The current `0001_initial` already
        # defines `Acompanante`, so those rename/delete operations are
        # redundant and removed to keep the migration graph consistent.
    ]
