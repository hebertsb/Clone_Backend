# Generated by Django 5.2.5 on 2025-09-19 20:31

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reservas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionGlobalReprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clave', models.CharField(help_text='Clave única de configuración', max_length=50, unique=True)),
                ('valor', models.TextField(help_text='Valor de la configuración')),
                ('descripcion', models.TextField(help_text='Descripción de qué hace esta configuración')),
                ('tipo_valor', models.CharField(choices=[('STRING', 'Texto'), ('INTEGER', 'Número entero'), ('DECIMAL', 'Número decimal'), ('BOOLEAN', 'Verdadero/Falso'), ('JSON', 'JSON/Objeto'), ('LISTA', 'Lista de valores')], default='STRING', max_length=20)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Configuración Global',
                'verbose_name_plural': 'Configuraciones Globales',
                'ordering': ['clave'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReglasReprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(help_text='Nombre descriptivo de la regla', max_length=100)),
                ('tipo_regla', models.CharField(choices=[('TIEMPO_MINIMO', 'Tiempo mínimo de anticipación'), ('TIEMPO_MAXIMO', 'Tiempo máximo para reprogramar'), ('LIMITE_REPROGRAMACIONES', 'Límite de reprogramaciones por reserva'), ('LIMITE_DIARIO', 'Límite de reprogramaciones por día'), ('LIMITE_SEMANAL', 'Límite de reprogramaciones por semana'), ('LIMITE_MENSUAL', 'Límite de reprogramaciones por mes'), ('DIAS_BLACKOUT', 'Días no permitidos para reprogramar'), ('HORAS_BLACKOUT', 'Horas no permitidas para reprogramar'), ('CAPACIDAD_MAXIMA', 'Capacidad máxima por fecha'), ('DESCUENTO_PENALIZACION', 'Penalización por reprogramar'), ('SERVICIOS_RESTRINGIDOS', 'Servicios con restricciones especiales'), ('ROLES_EXCLUIDOS', 'Roles excluidos de ciertas restricciones')], help_text='Tipo de regla a aplicar', max_length=30)),
                ('aplicable_a', models.CharField(choices=[('ALL', 'Todos los roles'), ('CLIENTE', 'Solo clientes'), ('OPERADOR', 'Solo operadores'), ('ADMIN', 'Solo administradores'), ('CLIENTE_OPERADOR', 'Clientes y operadores'), ('OPERADOR_ADMIN', 'Operadores y administradores')], default='ALL', help_text='A qué roles se aplica esta regla', max_length=20)),
                ('valor_numerico', models.IntegerField(blank=True, help_text='Valor numérico (horas, días, cantidad, etc.)', null=True)),
                ('valor_decimal', models.DecimalField(blank=True, decimal_places=2, help_text='Valor decimal (porcentajes, montos, etc.)', max_digits=10, null=True)),
                ('valor_texto', models.TextField(blank=True, help_text='Valores de texto o JSON (días, horas específicas, etc.)', null=True)),
                ('valor_booleano', models.BooleanField(blank=True, help_text='Valor verdadero/falso', null=True)),
                ('fecha_inicio_vigencia', models.DateTimeField(blank=True, help_text='Cuando empieza a aplicar esta regla', null=True)),
                ('fecha_fin_vigencia', models.DateTimeField(blank=True, help_text='Cuando deja de aplicar esta regla', null=True)),
                ('activa', models.BooleanField(default=True, help_text='Si la regla está activa')),
                ('prioridad', models.PositiveSmallIntegerField(default=1, help_text='Prioridad de aplicación (1=máxima)')),
                ('mensaje_error', models.TextField(blank=True, help_text='Mensaje personalizado cuando se viola la regla', null=True)),
                ('condiciones_extras', models.JSONField(blank=True, default=dict, help_text='Condiciones adicionales en formato JSON')),
            ],
            options={
                'verbose_name': 'Regla de Reprogramación',
                'verbose_name_plural': 'Reglas de Reprogramación',
                'ordering': ['prioridad', 'tipo_regla'],
                'abstract': False,
                'indexes': [models.Index(fields=['tipo_regla', 'activa'], name='reservas_re_tipo_re_4a39cf_idx'), models.Index(fields=['aplicable_a', 'activa'], name='reservas_re_aplicab_da5baf_idx'), models.Index(fields=['prioridad'], name='reservas_re_priorid_c467a2_idx')],
                'unique_together': {('tipo_regla', 'aplicable_a')},
            },
        ),
    ]
